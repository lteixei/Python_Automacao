{"name": "test_dynamic_data", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"button\" class=\"btn btn-default\" id=\"save\">...</button> is not clickable at point (345, 526). Other element would receive the click: <iframe id=\"aswift_4\" name=\"aswift_4\" browsingtopics=\"true\" style=\"min-height: auto; max-height: none; min-width: auto; max-width: none; width: 1005px !important; height: 124px !important; display: block; margin: 0px auto;\" sandbox=\"allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation\" width=\"1005\" height=\"124\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" vspace=\"0\" hspace=\"0\" allowtransparency=\"true\" scrolling=\"no\" allow=\"attribution-reporting; run-ad-auction\" src=\"https://googleads.g.doubleclick.net/pagead/html/r20250820/r20190131/zrt_lookup_fy2021.html#RS-0-&amp;adk=1812271801&amp;client=ca-pub-9173866185064071&amp;fa=1&amp;ifi=5&amp;uci=a!5&amp;btvi=4\" data-google-container-id=\"a!5\" tabindex=\"0\" title=\"Advertisement\" aria-label=\"Advertisement\" data-google-query-id=\"CLOv-_yVnI8DFXVQuAQdPRgn_w\" data-load-complete=\"true\"></iframe>\n  (Session info: chrome=139.0.7258.128); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#elementclickinterceptedexception\nStacktrace:\n\tGetHandleVerifier [0x0x78ffc3+65331]\n\tGetHandleVerifier [0x0x790004+65396]\n\t(No symbol) [0x0x583f63]\n\t(No symbol) [0x0x5d2ce0]\n\t(No symbol) [0x0x5d109a]\n\t(No symbol) [0x0x5cebf2]\n\t(No symbol) [0x0x5cdee1]\n\t(No symbol) [0x0x5c2645]\n\t(No symbol) [0x0x5f14dc]\n\t(No symbol) [0x0x5c20d4]\n\t(No symbol) [0x0x5f1754]\n\t(No symbol) [0x0x612bcb]\n\t(No symbol) [0x0x5f12d6]\n\t(No symbol) [0x0x5c0910]\n\t(No symbol) [0x0x5c1784]\n\tGetHandleVerifier [0x0x9d38b3+2439203]\n\tGetHandleVerifier [0x0x9ceae2+2419282]\n\tGetHandleVerifier [0x0x7b712a+225434]\n\tGetHandleVerifier [0x0x7a6e08+159096]\n\tGetHandleVerifier [0x0x7add5d+187597]\n\tGetHandleVerifier [0x0x797ad8+96840]\n\tGetHandleVerifier [0x0x797c62+97234]\n\tGetHandleVerifier [0x0x78277a+9962]\n\tBaseThreadInitThunk [0x0x76cf5d49+25]\n\tRtlInitializeExceptionChain [0x0x7751d2fb+107]\n\tRtlGetAppContainerNamedObjectPath [0x0x7751d281+561]", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"d9afd3fcffc950c784f6504cef280499\")>\n\n    def test_dynamic_data(driver):\n        driver.get(\"https://demo.automationtesting.in/DynamicData.html\")\n        for _ in range(3):\n            btn = WebDriverWait(driver, 30).until(\n                EC.element_to_be_clickable((By.XPATH, '//*[@id=\"save\"]'))\n            )\n>           btn.click()\n\ntests\\test_More.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Users\\Leonardo\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:120: in click\n    self._execute(Command.CLICK_ELEMENT)\nC:\\Users\\Leonardo\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:573: in _execute\n    return self._parent.execute(command, params)\nC:\\Users\\Leonardo\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:458: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000019769A1A250>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...]\\\\n\\\\tRtlInitializeExceptionChain [0x0x7751d2fb+107]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x0x7751d281+561]\\\\n\"}}'}\n\n    def check_response(self, response: dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                try:\n                    value = json.loads(value_json)\n                    if isinstance(value, dict):\n                        if len(value) == 1:\n                            value = value[\"value\"]\n                        status = value.get(\"error\", None)\n                        if not status:\n                            status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                            message = value.get(\"value\") or value.get(\"message\")\n                            if not isinstance(message, str):\n                                value = message\n                                message = message.get(\"message\")\n                        else:\n                            message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"button\" class=\"btn btn-default\" id=\"save\">...</button> is not clickable at point (345, 526). Other element would receive the click: <iframe id=\"aswift_4\" name=\"aswift_4\" browsingtopics=\"true\" style=\"min-height: auto; max-height: none; min-width: auto; max-width: none; width: 1005px !important; height: 124px !important; display: block; margin: 0px auto;\" sandbox=\"allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation\" width=\"1005\" height=\"124\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" vspace=\"0\" hspace=\"0\" allowtransparency=\"true\" scrolling=\"no\" allow=\"attribution-reporting; run-ad-auction\" src=\"https://googleads.g.doubleclick.net/pagead/html/r20250820/r20190131/zrt_lookup_fy2021.html#RS-0-&amp;adk=1812271801&amp;client=ca-pub-9173866185064071&amp;fa=1&amp;ifi=5&amp;uci=a!5&amp;btvi=4\" data-google-container-id=\"a!5\" tabindex=\"0\" title=\"Advertisement\" aria-label=\"Advertisement\" data-google-query-id=\"CLOv-_yVnI8DFXVQuAQdPRgn_w\" data-load-complete=\"true\"></iframe>\nE         (Session info: chrome=139.0.7258.128); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#elementclickinterceptedexception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x78ffc3+65331]\nE       \tGetHandleVerifier [0x0x790004+65396]\nE       \t(No symbol) [0x0x583f63]\nE       \t(No symbol) [0x0x5d2ce0]\nE       \t(No symbol) [0x0x5d109a]\nE       \t(No symbol) [0x0x5cebf2]\nE       \t(No symbol) [0x0x5cdee1]\nE       \t(No symbol) [0x0x5c2645]\nE       \t(No symbol) [0x0x5f14dc]\nE       \t(No symbol) [0x0x5c20d4]\nE       \t(No symbol) [0x0x5f1754]\nE       \t(No symbol) [0x0x612bcb]\nE       \t(No symbol) [0x0x5f12d6]\nE       \t(No symbol) [0x0x5c0910]\nE       \t(No symbol) [0x0x5c1784]\nE       \tGetHandleVerifier [0x0x9d38b3+2439203]\nE       \tGetHandleVerifier [0x0x9ceae2+2419282]\nE       \tGetHandleVerifier [0x0x7b712a+225434]\nE       \tGetHandleVerifier [0x0x7a6e08+159096]\nE       \tGetHandleVerifier [0x0x7add5d+187597]\nE       \tGetHandleVerifier [0x0x797ad8+96840]\nE       \tGetHandleVerifier [0x0x797c62+97234]\nE       \tGetHandleVerifier [0x0x78277a+9962]\nE       \tBaseThreadInitThunk [0x0x76cf5d49+25]\nE       \tRtlInitializeExceptionChain [0x0x7751d2fb+107]\nE       \tRtlGetAppContainerNamedObjectPath [0x0x7751d281+561]\n\nC:\\Users\\Leonardo\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: ElementClickInterceptedException"}, "start": 1755788528189, "stop": 1755788534670, "uuid": "34cceddb-27ec-4841-8f0a-6bb61df28ada", "historyId": "98fa881a32d1f204dfe675d288f90856", "testCaseId": "98fa881a32d1f204dfe675d288f90856", "fullName": "tests.test_More#test_dynamic_data", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_More"}, {"name": "host", "value": "DESKTOP-9U5D9IN"}, {"name": "thread", "value": "8488-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_More"}], "titlePath": ["tests", "test_More.py"]}