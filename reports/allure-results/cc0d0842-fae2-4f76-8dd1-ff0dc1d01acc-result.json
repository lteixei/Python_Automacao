{"name": "test_alert_default", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x8fa8a3+63283]\n\tGetHandleVerifier [0x0x8fa8e4+63348]\n\t(No symbol) [0x0x733e43]\n\t(No symbol) [0x0x77c8de]\n\t(No symbol) [0x0x77cc7b]\n\t(No symbol) [0x0x7c4ef2]\n\t(No symbol) [0x0x7a1464]\n\t(No symbol) [0x0x7c271a]\n\t(No symbol) [0x0x7a1216]\n\t(No symbol) [0x0x770855]\n\t(No symbol) [0x0x7716f4]\n\tGetHandleVerifier [0x0xb6bb43+2623955]\n\tGetHandleVerifier [0x0xb66daa+2604090]\n\tGetHandleVerifier [0x0x92069a+218410]\n\tGetHandleVerifier [0x0x910ed8+154984]\n\tGetHandleVerifier [0x0x91742d+180925]\n\tGetHandleVerifier [0x0x9022b8+94536]\n\tGetHandleVerifier [0x0x902442+94930]\n\tGetHandleVerifier [0x0x8ed5ea+9338]\n\tBaseThreadInitThunk [0x0x777e5d49+25]\n\tRtlInitializeExceptionChain [0x0x77cbd2fb+107]\n\tRtlGetAppContainerNamedObjectPath [0x0x77cbd281+561]", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"5571d3c85599d089c9411c548b750b66\")>\n\n    def test_alert_default(driver):\n        driver.get('https://demo.automationtesting.in/')\n        WebDriverWait(driver, 10).until(\n            EC.element_to_be_clickable((By.ID, \"btn2\"))\n        ).click()\n    \n>       WebDriverWait(driver, 10).until(\n            EC.element_to_be_clickable((By.LINK_TEXT, \"SwitchTo\"))\n        ).click()\n\ntests\\test_ShitichTo.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"5571d3c85599d089c9411c548b750b66\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x000001749CC67E20>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x8fa8a3+63283]\nE       \tGetHandleVerifier [0x0x8fa8e4+63348]\nE       \t(No symbol) [0x0x733e43]\nE       \t(No symbol) [0x0x77c8de]\nE       \t(No symbol) [0x0x77cc7b]\nE       \t(No symbol) [0x0x7c4ef2]\nE       \t(No symbol) [0x0x7a1464]\nE       \t(No symbol) [0x0x7c271a]\nE       \t(No symbol) [0x0x7a1216]\nE       \t(No symbol) [0x0x770855]\nE       \t(No symbol) [0x0x7716f4]\nE       \tGetHandleVerifier [0x0xb6bb43+2623955]\nE       \tGetHandleVerifier [0x0xb66daa+2604090]\nE       \tGetHandleVerifier [0x0x92069a+218410]\nE       \tGetHandleVerifier [0x0x910ed8+154984]\nE       \tGetHandleVerifier [0x0x91742d+180925]\nE       \tGetHandleVerifier [0x0x9022b8+94536]\nE       \tGetHandleVerifier [0x0x902442+94930]\nE       \tGetHandleVerifier [0x0x8ed5ea+9338]\nE       \tBaseThreadInitThunk [0x0x777e5d49+25]\nE       \tRtlInitializeExceptionChain [0x0x77cbd2fb+107]\nE       \tRtlGetAppContainerNamedObjectPath [0x0x77cbd281+561]\n\nC:\\Users\\Leonardo\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException"}, "start": 1756496818943, "stop": 1756496838488, "uuid": "2314405f-d00d-4b0c-9d39-04bd59368e87", "historyId": "5fdcc2b139616a258c852d4a5eb770c5", "testCaseId": "5fdcc2b139616a258c852d4a5eb770c5", "fullName": "tests.test_ShitichTo#test_alert_default", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_ShitichTo"}, {"name": "host", "value": "DESKTOP-9U5D9IN"}, {"name": "thread", "value": "10772-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_ShitichTo"}], "titlePath": ["tests", "test_ShitichTo.py"]}