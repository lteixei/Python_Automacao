{"name": "test_video_youtube", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x78ffc3+65331]\n\tGetHandleVerifier [0x0x790004+65396]\n\t(No symbol) [0x0x583f63]\n\t(No symbol) [0x0x5cc99e]\n\t(No symbol) [0x0x5ccd3b]\n\t(No symbol) [0x0x6153d2]\n\t(No symbol) [0x0x5f1524]\n\t(No symbol) [0x0x612bcb]\n\t(No symbol) [0x0x5f12d6]\n\t(No symbol) [0x0x5c0910]\n\t(No symbol) [0x0x5c1784]\n\tGetHandleVerifier [0x0x9d38b3+2439203]\n\tGetHandleVerifier [0x0x9ceae2+2419282]\n\tGetHandleVerifier [0x0x7b712a+225434]\n\tGetHandleVerifier [0x0x7a6e08+159096]\n\tGetHandleVerifier [0x0x7add5d+187597]\n\tGetHandleVerifier [0x0x797ad8+96840]\n\tGetHandleVerifier [0x0x797c62+97234]\n\tGetHandleVerifier [0x0x78277a+9962]\n\tBaseThreadInitThunk [0x0x76cf5d49+25]\n\tRtlInitializeExceptionChain [0x0x7751d2fb+107]\n\tRtlGetAppContainerNamedObjectPath [0x0x7751d281+561]", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"6efe256a04bea1f4448477ae42563f8e\")>\n\n    def test_video_youtube(driver):\n        driver.get('https://demo.automationtesting.in/Youtube.html')\n    \n        # Espera o iframe carregar e muda o contexto para ele\n        iframe = WebDriverWait(driver, 10).until(\n            EC.presence_of_element_located((By.CSS_SELECTOR, 'iframe[src*=\"youtube.com\"]'))\n        )\n        driver.switch_to.frame(iframe)\n    \n        # Espera e clica no botÃ£o Play\n>       play_button = WebDriverWait(driver, 10).until(\n            EC.element_to_be_clickable((By.CSS_SELECTOR, 'button[aria-label=\"Play\"]'))\n        )\n\ntests\\test_Video.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"6efe256a04bea1f4448477ae42563f8e\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x00000205A99CA200>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x78ffc3+65331]\nE       \tGetHandleVerifier [0x0x790004+65396]\nE       \t(No symbol) [0x0x583f63]\nE       \t(No symbol) [0x0x5cc99e]\nE       \t(No symbol) [0x0x5ccd3b]\nE       \t(No symbol) [0x0x6153d2]\nE       \t(No symbol) [0x0x5f1524]\nE       \t(No symbol) [0x0x612bcb]\nE       \t(No symbol) [0x0x5f12d6]\nE       \t(No symbol) [0x0x5c0910]\nE       \t(No symbol) [0x0x5c1784]\nE       \tGetHandleVerifier [0x0x9d38b3+2439203]\nE       \tGetHandleVerifier [0x0x9ceae2+2419282]\nE       \tGetHandleVerifier [0x0x7b712a+225434]\nE       \tGetHandleVerifier [0x0x7a6e08+159096]\nE       \tGetHandleVerifier [0x0x7add5d+187597]\nE       \tGetHandleVerifier [0x0x797ad8+96840]\nE       \tGetHandleVerifier [0x0x797c62+97234]\nE       \tGetHandleVerifier [0x0x78277a+9962]\nE       \tBaseThreadInitThunk [0x0x76cf5d49+25]\nE       \tRtlInitializeExceptionChain [0x0x7751d2fb+107]\nE       \tRtlGetAppContainerNamedObjectPath [0x0x7751d281+561]\n\nC:\\Users\\Leonardo\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException"}, "start": 1755788108689, "stop": 1755788127246, "uuid": "dc1712a1-0c72-4033-9f26-465c4bcaa850", "historyId": "21fe617be5109767b99f404dc32f8490", "testCaseId": "21fe617be5109767b99f404dc32f8490", "fullName": "tests.test_Video#test_video_youtube", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_Video"}, {"name": "host", "value": "DESKTOP-9U5D9IN"}, {"name": "thread", "value": "11524-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_Video"}], "titlePath": ["tests", "test_Video.py"]}